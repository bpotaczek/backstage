apiVersion: backstage.io/v1alpha1
kind: Component
metadata:
  name: kbxtecho
  description: Kbxt Echo Service
  annotations:
    backstage.io/kubernetes-label-selector: app.kubernetes.io/instance=kbxtecho
  links:
    - title: "Container Logs"
      url: https://app.datadoghq.com/logs?query=service%3Akbxtecho
      icon: ManageSearch
  tags:
    - netcore
spec:
  type: service
  lifecycle: production
  owner: echo
  system: platform
  providesApis:
    - kbxtecho
  consumesApis:
    - kbxtechogrpc-files
    - kbxtechogrpc-echo
---
apiVersion: backstage.io/v1alpha1
kind: API
metadata:
  name: kbxtecho
  description: Kbxt Echo Service
spec:
  type: openapi
  lifecycle: production
  owner: echo
  definition:
    $text: https://api.dev.kbxt.cloud/public/echo/echo/swagger/v1.0/swagger.json
---
apiVersion: backstage.io/v1alpha1
kind: Component
metadata:
  name: kbxtechogrpc
  description: Kbxt Echo Grpc Service
  annotations:
    backstage.io/kubernetes-label-selector: app.kubernetes.io/instance=kbxtechogrpc
  tags:
    - netcore
    - grpc
spec:
  type: service
  lifecycle: production
  owner: echo
  system: platform
  providesApis:
    - kbxtechogrpc-files
    - kbxtechogrpc-echo
---
apiVersion: backstage.io/v1alpha1
kind: API
metadata:
  name: kbxtechogrpc-files
  description: Kbxt Echo Grpc Files Service
spec:
  type: grpc
  lifecycle: production
  owner: echo
  definition: |
    syntax = "proto3";

    option csharp_namespace = "KbxtEchoGrpc";

    package files;

    service Files {
      rpc Send (UploadRequest) returns (UploadReply);
      rpc Retrieve (DownloadRequest) returns (DownloadReply);
    }

    message UploadRequest {
      string filename = 1;
      bytes data = 2;
    }

    message UploadReply {
      string message = 1;
    }

    message DownloadRequest {
      int32  filesize = 1;
    }

    message DownloadReply {
      string filename = 1;
      bytes data = 2;
    }
---
---
apiVersion: backstage.io/v1alpha1
kind: API
metadata:
  name: kbxtechogrpc-echo
  description: Kbxt Echo Grpc Service
spec:
  type: grpc
  lifecycle: production
  owner: echo
  definition: |
    syntax = "proto3";

    option csharp_namespace = "KbxtEchoGrpc";

    package echo;

    // The greeting service definition.
    service Echo {
      // Sends a greeting
      rpc Ping (EchoRequest) returns (EchoReply);
    }

    // The request message containing the user's name.
    message EchoRequest {
      string message = 1;
      int32 delay = 2;
    }

    // The response message containing the greetings.
    message EchoReply {
      string message = 1;
      string request = 2;
      map<string, string> headers = 3;
      map<string, string> podinfo = 4;
    }
